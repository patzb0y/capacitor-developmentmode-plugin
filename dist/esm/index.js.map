{"version":3,"file":"index.js","sources":["../../src/index.ts","../../src/web.ts"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\n\nimport type { developmentmodepluginPlugin } from './definitions';\n\nconst developmentmodeplugin = registerPlugin<developmentmodepluginPlugin>('developmentmodeplugin', {\n  web: () => import('./web').then((m) => new m.developmentmodepluginWeb()),\n});\n\n\nexport * from './definitions';\nexport { developmentmodeplugin };\n","import { WebPlugin } from '@capacitor/core';\n\nimport type { developmentmodepluginPlugin } from './definitions';\n\nexport class developmentmodepluginWeb extends WebPlugin implements developmentmodepluginPlugin {\n  async isDeveloperModeEnabled(): Promise<{ developerMode: boolean }> {\n    // Web doesn't have access to Android's settings, so we mock the behavior\n    return {\n      developerMode: false,  // Or `true` depending on what you want to return for testing\n    };\n  }\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    console.log('ECHO', options);\n    return options;\n  }\n\n}\n"],"names":[],"mappings":";;AAIA,MAAM,qBAAqB,GAAG,cAAc,CAA8B,uBAAuB,EAAE;IACjG,GAAG,EAAE,MAAM,mDAAe,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,wBAAwB,EAAE,CAAC;AACzE,CAAA;;ACFK,MAAO,wBAAyB,SAAQ,SAAS,CAAA;AACrD,IAAA,MAAM,sBAAsB,GAAA;;QAE1B,OAAO;AACL,YAAA,aAAa,EAAE,KAAK;SACrB,CAAC;KACH;IACD,MAAM,IAAI,CAAC,OAA0B,EAAA;AACnC,QAAA,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAC7B,QAAA,OAAO,OAAO,CAAC;KAChB;AAEF;;;;;;;;;"}