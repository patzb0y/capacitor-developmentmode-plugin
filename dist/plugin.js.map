{"version":3,"file":"plugin.js","sources":["../src/index.ts","../src/web.ts"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\n\nimport type { DevelopmentModePlugin } from './definitions';\n\nconst developmentmodeplugin = registerPlugin<DevelopmentModePlugin>('developmentmodeplugin', {\n  web: () => import('./web').then((m) => new m.DevelopmentModePluginWeb()),\n});\n\n\nexport * from './definitions';\nexport { developmentmodeplugin };\n","import { WebPlugin } from '@capacitor/core';\n\nimport type { DevelopmentModePlugin } from './definitions';\n\nexport class DevelopmentModePluginWeb extends WebPlugin implements DevelopmentModePlugin {\n  async isDeveloperModeEnabled(): Promise<{ developerMode: boolean }> {\n    // Web doesn't have access to Android's settings, so we mock the behavior\n    return {\n      developerMode: false,  // Or `true` depending on what you want to return for testing\n    };\n  }\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    console.log('ECHO', options);\n    return options;\n  }\n\n}\n"],"names":["registerPlugin","WebPlugin"],"mappings":";;;AAIA,QAAM,qBAAqB,GAAGA,mBAAc,CAA8B,uBAAuB,EAAE;MACjG,GAAG,EAAE,MAAM,mDAAe,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,wBAAwB,EAAE,CAAC;EACzE,CAAA;;ECFK,MAAO,wBAAyB,SAAQC,cAAS,CAAA;EACrD,IAAA,MAAM,sBAAsB,GAAA;;UAE1B,OAAO;EACL,YAAA,aAAa,EAAE,KAAK;WACrB,CAAC;OACH;MACD,MAAM,IAAI,CAAC,OAA0B,EAAA;EACnC,QAAA,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;EAC7B,QAAA,OAAO,OAAO,CAAC;OAChB;EAEF;;;;;;;;;;;;;;;"}